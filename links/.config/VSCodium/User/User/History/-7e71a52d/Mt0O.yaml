version: '3.8'

services:
  backend:
    container_name: logify_backend
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    environment:
      NODE_ENV: production
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      - db

  frontend:
    container_name: logify_frontend
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    environment:
      PORT: 4173
      PUBLIC_BACKEND_PORT: 3000
      PUBLIC_BACKEND_HOST: localhost
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      ORIGIN: http://localhost:4173
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "4173:4173"
    depends_on:
      - backend
      - db

  db:
    image: mysql
    restart: always
    container_name: logify_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./db_data:/var/lib/mysql
      - ./backend/database.sql:/docker-entrypoint-initdb.d/database.sql

volumes:
  db_data:
